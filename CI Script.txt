pipeline {
    agent any
    
    tools {
        jdk 'jdk21'
        maven 'maven3'
    }
    
    environment {
        SCANNER_HOME= tool 'sonar-scanner'
    }

    stages {
        stage('Git Checkout') {
            steps {
               git branch: 'main', changelog: false, poll: false, url: 'https://github.com/jaiswaladi246/Ekart.git' 
            }
        }
        
         stage('Compile') {
            steps {
                bat "mvn clean compile"
            }
        }
        
        stage('Sonarqube Analysis') {
            steps {
                        bat " $SCANNER_HOME/bin/sonar-scanner -Dsonar.url=http://192.168.5.170:9000/ -Dsonar.login=squ_e60db3fa6a4f682bfd065e39e7aa33e50417cc53 -Dsonar.projectName=shopping-cart \
                        -Dsonar.java.binaries=. \
                        -Dsonar.projectKey=shopping-cart "
                
            }
        }
        
         stage('OWASP SCAN') {
            steps {
                dependencyCheck additionalArguments: ' --scan ./', odcInstallation: 'DP'
                    dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
        
         stage('Build Application') {
             steps {
                bat "mvn clean install -DskipTests=true"
            }
        }
        
         stage('Build & Push Docker Image') {
            steps {
                script{
                    withDockerRegistry(credentialsId: 'c0388cad-125a-4feb-8d59-d3c73a858507', toolName: 'docker') {
                        
                        bat "docker build -t shopping:latest -f docker/Dockerfile ."
                        bat "docker tag shopping:latest sulaimanamer/shopping:latest"
                        bat "docker push sulaimanamer/shopping:latest"
                    }
               }
            }
        }
        
        stage('Trigger CD Pipeline') {
            steps { 
                build job: "CD_Pipeline" , wait: true
            }
        
    }
}